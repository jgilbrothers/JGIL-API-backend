import express from "express";
import axios from "axios";

const app = express();
app.use(express.json({ limit: "2mb" }));

// Health check
app.get("/", (req, res) => {
res.send({ ok: true, service: "JGB API" });
});

// Generate route
app.post("/generate", async (req, res) => {
try {
const { prompt, userId } = req.body || {};
if (!prompt) return res.status(400).json({ error: "Missing prompt" });

const STABILITY_API_KEY = process.env.STABILITY_API_KEY;
const STABILITY_API_URL = process.env.STABILITY_API_URL;

const stabilityResp = await axios.post(
STABILITY_API_URL,
{ prompt },
{
headers: {
Authorization: `Bearer ${STABILITY_API_KEY}`,
"Content-Type": "application/json"
},
responseType: "arraybuffer"
}
);

const b64 = Buffer.from(stabilityResp.data, "binary").toString("base64");
const imageUrl = `data:image/png;base64,${b64}`;

console.log({ userId, prompt, createdAt: new Date().toISOString() });
res.json({ imageUrl });

} catch (err) {
console.error(err?.response?.data || err.message);
res.status(500).json({ error: "Generation failed" });
}
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`JGB API running on ${PORT}`));